// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  email       String @unique
  password    String
  address     Address? 
  phoneNumber Int @default(0)
  role        String @default("customer")
  createdAt   DateTime @default(now())
  Otp         Otp[]
  cart        Cart[] 
  orders      Order[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Int
  quantity    Int
  rating      Int
  image       String
  color       String[]
  size        String[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String? @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartItems   CartItem[]
}

model Order {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String @db.ObjectId
  status          String @default("pending")
  totalPrice      Int
  items           String[]
  shippingAddress Address
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  user            User     @relation(fields: [userId], references: [id])
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String  @unique
  description String?
  products    Product[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String @db.ObjectId
  items       CartItem[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model CartItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId      String @db.ObjectId
  productId   String @db.ObjectId
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cart        Cart     @relation(fields: [cartId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

model Otp {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  code        Int
  createdAt   DateTime @default(now())
  userId      String @db.ObjectId
  user        User @relation(fields: [userId], references: [id])
}

type Address {
  street String
  city   String
  state  String
  zip    String
}
